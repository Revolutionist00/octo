import React from 'react';
import { render } from 'ink';
import SelectInput from 'ink-select-input';
import require from 'requirejs';
import './test.js';
import { jsx as _jsx } from "react/jsx-runtime";
var crypto = require('crypto');
var request = require('request');
var arg = process.argv.slice(2);
switch (arg[0]) {
  case '-l':
    var resource = '/products';
    break;
  case '-a':
    var resource = '/accounts';
    break;
  default:
    console.log('und');
}
;

//function send(resource) {
//
//var apiKey = '2q7DfBj1Gcik5lBE';
//var apiSecret = 'ArtDbY362yWeW35whuXNeQzYC5nunFTW';
//
//var timestamp = Math.floor(Date.now() / 1000);
//var req = {
//    method: 'GET',
//    path: '/api/v3/brokerage/' + resource,
//    body: ''
//};
//
//var message = timestamp + req.method + req.path + req.body;
//
//var signature = crypto.createHmac("sha256", apiSecret).update(message).digest("hex");
//
//var options = {
//    baseUrl: 'https://api.coinbase.com/',
//    url: req.path,
//    method: req.method,
//    headers: {
//        'CB-ACCESS-SIGN': signature,
//        'CB-ACCESS-TIMESTAMP': timestamp,
//        'CB-ACCESS-KEY': apiKey,
//        'CB-VERSION': '2015-07-22'
//    }
//};
//
//request(options,function(err, response){
//    if (err) console.log(err);
//    console.log(response.body);
//});
//};

const Options1 = () => {
  const handleSelect = item => {
    // `item` = { label: 'First', value: 'first' }
    send(item.value);
  };
  const items = [{
    label: 'List Accounts',
    value: '/accounts'
  }, {
    label: 'Cancel Orders',
    value: '/orders/batch_cancel'
  }, {
    label: 'List Orders',
    value: '/orders/historical/batch'
  }, {
    label: 'List Fills',
    value: '/orders/historical/fills'
  }, {
    label: 'Get Best Bid/Ask',
    value: '/best_bid_ask'
  }, {
    label: 'Get Product Book',
    value: '/product_book'
  }, {
    label: 'List Products',
    value: '/products'
  }, {
    label: 'Get Tran-sactions Summary',
    value: '/transaction_summary'
  }];
  return _jsx(SelectInput, {
    items: items,
    onSelect: handleSelect
  });
};
render(_jsx(Options1, {}));
//export default resource = item.value
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlbmRlciIsIlNlbGVjdElucHV0IiwicmVxdWlyZSIsImpzeCIsIl9qc3giLCJjcnlwdG8iLCJyZXF1ZXN0IiwiYXJnIiwicHJvY2VzcyIsImFyZ3YiLCJzbGljZSIsInJlc291cmNlIiwiY29uc29sZSIsImxvZyIsIk9wdGlvbnMxIiwiaGFuZGxlU2VsZWN0IiwiaXRlbSIsInNlbmQiLCJ2YWx1ZSIsIml0ZW1zIiwibGFiZWwiLCJvblNlbGVjdCJdLCJzb3VyY2VzIjpbImNsaS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtyZW5kZXJ9IGZyb20gJ2luayc7XG5pbXBvcnQgU2VsZWN0SW5wdXQgZnJvbSAnaW5rLXNlbGVjdC1pbnB1dCc7XG5pbXBvcnQgcmVxdWlyZSBmcm9tICdyZXF1aXJlanMnXG5pbXBvcnQgJy4vdGVzdC5qcydcbnZhciBjcnlwdG8gPSByZXF1aXJlKCdjcnlwdG8nKTtcbnZhciByZXF1ZXN0ID0gcmVxdWlyZSgncmVxdWVzdCcpO1xuXG52YXIgYXJnID0gcHJvY2Vzcy5hcmd2LnNsaWNlKDIpO1xuXG5zd2l0Y2ggKGFyZ1swXSkge1xuICAgIGNhc2UgJy1sJzpcbiAgICAgICAgdmFyIHJlc291cmNlID0gJy9wcm9kdWN0cydcblx0YnJlYWs7XG4gICAgY2FzZSAnLWEnOlxuXHR2YXIgcmVzb3VyY2UgPSAnL2FjY291bnRzJ1xuXHRicmVhaztcbiAgICBkZWZhdWx0OiBjb25zb2xlLmxvZyhcbiAgICAgICAgJ3VuZCcpO1xufTtcblxuLy9mdW5jdGlvbiBzZW5kKHJlc291cmNlKSB7XG4vL1xuLy92YXIgYXBpS2V5ID0gJzJxN0RmQmoxR2NpazVsQkUnO1xuLy92YXIgYXBpU2VjcmV0ID0gJ0FydERiWTM2MnlXZVczNXdodVhOZVF6WUM1bnVuRlRXJztcbi8vXG4vL3ZhciB0aW1lc3RhbXAgPSBNYXRoLmZsb29yKERhdGUubm93KCkgLyAxMDAwKTtcbi8vdmFyIHJlcSA9IHtcbi8vICAgIG1ldGhvZDogJ0dFVCcsXG4vLyAgICBwYXRoOiAnL2FwaS92My9icm9rZXJhZ2UvJyArIHJlc291cmNlLFxuLy8gICAgYm9keTogJydcbi8vfTtcbi8vXG4vL3ZhciBtZXNzYWdlID0gdGltZXN0YW1wICsgcmVxLm1ldGhvZCArIHJlcS5wYXRoICsgcmVxLmJvZHk7XG4vL1xuLy92YXIgc2lnbmF0dXJlID0gY3J5cHRvLmNyZWF0ZUhtYWMoXCJzaGEyNTZcIiwgYXBpU2VjcmV0KS51cGRhdGUobWVzc2FnZSkuZGlnZXN0KFwiaGV4XCIpO1xuLy9cbi8vdmFyIG9wdGlvbnMgPSB7XG4vLyAgICBiYXNlVXJsOiAnaHR0cHM6Ly9hcGkuY29pbmJhc2UuY29tLycsXG4vLyAgICB1cmw6IHJlcS5wYXRoLFxuLy8gICAgbWV0aG9kOiByZXEubWV0aG9kLFxuLy8gICAgaGVhZGVyczoge1xuLy8gICAgICAgICdDQi1BQ0NFU1MtU0lHTic6IHNpZ25hdHVyZSxcbi8vICAgICAgICAnQ0ItQUNDRVNTLVRJTUVTVEFNUCc6IHRpbWVzdGFtcCxcbi8vICAgICAgICAnQ0ItQUNDRVNTLUtFWSc6IGFwaUtleSxcbi8vICAgICAgICAnQ0ItVkVSU0lPTic6ICcyMDE1LTA3LTIyJ1xuLy8gICAgfVxuLy99O1xuLy9cbi8vcmVxdWVzdChvcHRpb25zLGZ1bmN0aW9uKGVyciwgcmVzcG9uc2Upe1xuLy8gICAgaWYgKGVycikgY29uc29sZS5sb2coZXJyKTtcbi8vICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmJvZHkpO1xuLy99KTtcbi8vfTtcblxuY29uc3QgT3B0aW9uczEgPSAoKSA9PiB7XG5cdGNvbnN0IGhhbmRsZVNlbGVjdCA9IGl0ZW0gPT4ge1xuXHRcdC8vIGBpdGVtYCA9IHsgbGFiZWw6ICdGaXJzdCcsIHZhbHVlOiAnZmlyc3QnIH1cblx0XHRzZW5kKGl0ZW0udmFsdWUpXG5cdH07XG5cblx0Y29uc3QgaXRlbXMgPSBbXG5cdFx0e1xuXHRcdGxhYmVsOiAnTGlzdCBBY2NvdW50cycsXG5cdFx0dmFsdWU6ICcvYWNjb3VudHMnXG5cdFx0fSxcblx0XHR7XG5cdFx0bGFiZWw6ICdDYW5jZWwgT3JkZXJzJyxcblx0XHR2YWx1ZTogJy9vcmRlcnMvYmF0Y2hfY2FuY2VsJ1xuXHRcdH0sXG5cdFx0e1xuXHRcdGxhYmVsOiAnTGlzdCBPcmRlcnMnLFxuXHRcdHZhbHVlOiAnL29yZGVycy9oaXN0b3JpY2FsL2JhdGNoJ1xuXHRcdH0sXG5cdFx0e1xuXHRcdGxhYmVsOiAnTGlzdCBGaWxscycsXG5cdFx0dmFsdWU6ICcvb3JkZXJzL2hpc3RvcmljYWwvZmlsbHMnXG5cdFx0fSxcblx0XHR7XG5cdFx0bGFiZWw6ICdHZXQgQmVzdCBCaWQvQXNrJyxcblx0XHR2YWx1ZTogJy9iZXN0X2JpZF9hc2snXG5cdFx0fSxcblx0XHR7XG5cdFx0bGFiZWw6ICdHZXQgUHJvZHVjdCBCb29rJyxcblx0XHR2YWx1ZTogJy9wcm9kdWN0X2Jvb2snXG5cdFx0fSxcblx0XHR7XG5cdFx0bGFiZWw6ICdMaXN0IFByb2R1Y3RzJyxcblx0XHR2YWx1ZTogJy9wcm9kdWN0cydcblx0XHR9LFxuXHRcdHtcblx0XHRsYWJlbDogJ0dldCBUcmFuLXNhY3Rpb25zIFN1bW1hcnknLFxuXHRcdHZhbHVlOiAnL3RyYW5zYWN0aW9uX3N1bW1hcnknXG5cdFx0fVxuXHRdO1xuXG5cdHJldHVybiA8U2VsZWN0SW5wdXQgaXRlbXM9e2l0ZW1zfSBvblNlbGVjdD17aGFuZGxlU2VsZWN0fSAvPjtcbn07XG5cbnJlbmRlcig8T3B0aW9uczEgLz4pO1xuLy9leHBvcnQgZGVmYXVsdCByZXNvdXJjZSA9IGl0ZW0udmFsdWVcbiJdLCJtYXBwaW5ncyI6IkFBQUEsT0FBT0EsS0FBSyxNQUFNLE9BQU87QUFDekIsU0FBUUMsTUFBTSxRQUFPLEtBQUs7QUFDMUIsT0FBT0MsV0FBVyxNQUFNLGtCQUFrQjtBQUMxQyxPQUFPQyxPQUFPLE1BQU0sV0FBVztBQUMvQixPQUFPLFdBQVc7QUFBQSxTQUFBQyxHQUFBLElBQUFDLElBQUE7QUFDbEIsSUFBSUMsTUFBTSxHQUFHSCxPQUFPLENBQUMsUUFBUSxDQUFDO0FBQzlCLElBQUlJLE9BQU8sR0FBR0osT0FBTyxDQUFDLFNBQVMsQ0FBQztBQUVoQyxJQUFJSyxHQUFHLEdBQUdDLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0FBRS9CLFFBQVFILEdBQUcsQ0FBQyxDQUFDLENBQUM7RUFDVixLQUFLLElBQUk7SUFDTCxJQUFJSSxRQUFRLEdBQUcsV0FBVztJQUNqQztFQUNHLEtBQUssSUFBSTtJQUNaLElBQUlBLFFBQVEsR0FBRyxXQUFXO0lBQzFCO0VBQ0c7SUFBU0MsT0FBTyxDQUFDQyxHQUFHLENBQ2hCLEtBQUssQ0FBQztBQUNkO0FBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE1BQU1DLFFBQVEsR0FBR0EsQ0FBQSxLQUFNO0VBQ3RCLE1BQU1DLFlBQVksR0FBR0MsSUFBSSxJQUFJO0lBQzVCO0lBQ0FDLElBQUksQ0FBQ0QsSUFBSSxDQUFDRSxLQUFLLENBQUM7RUFDakIsQ0FBQztFQUVELE1BQU1DLEtBQUssR0FBRyxDQUNiO0lBQ0FDLEtBQUssRUFBRSxlQUFlO0lBQ3RCRixLQUFLLEVBQUU7RUFDUCxDQUFDLEVBQ0Q7SUFDQUUsS0FBSyxFQUFFLGVBQWU7SUFDdEJGLEtBQUssRUFBRTtFQUNQLENBQUMsRUFDRDtJQUNBRSxLQUFLLEVBQUUsYUFBYTtJQUNwQkYsS0FBSyxFQUFFO0VBQ1AsQ0FBQyxFQUNEO0lBQ0FFLEtBQUssRUFBRSxZQUFZO0lBQ25CRixLQUFLLEVBQUU7RUFDUCxDQUFDLEVBQ0Q7SUFDQUUsS0FBSyxFQUFFLGtCQUFrQjtJQUN6QkYsS0FBSyxFQUFFO0VBQ1AsQ0FBQyxFQUNEO0lBQ0FFLEtBQUssRUFBRSxrQkFBa0I7SUFDekJGLEtBQUssRUFBRTtFQUNQLENBQUMsRUFDRDtJQUNBRSxLQUFLLEVBQUUsZUFBZTtJQUN0QkYsS0FBSyxFQUFFO0VBQ1AsQ0FBQyxFQUNEO0lBQ0FFLEtBQUssRUFBRSwyQkFBMkI7SUFDbENGLEtBQUssRUFBRTtFQUNQLENBQUMsQ0FDRDtFQUVELE9BQU9kLElBQUEsQ0FBQ0gsV0FBVztJQUFDa0IsS0FBSyxFQUFFQSxLQUFNO0lBQUNFLFFBQVEsRUFBRU47RUFBYSxDQUFFLENBQUM7QUFDN0QsQ0FBQztBQUVEZixNQUFNLENBQUNJLElBQUEsQ0FBQ1UsUUFBUSxJQUFFLENBQUMsQ0FBQztBQUNwQiJ9