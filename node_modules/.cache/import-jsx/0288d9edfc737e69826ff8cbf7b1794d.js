import React from 'react';
import { render } from 'ink';
import SelectInput from 'ink-select-input';
import require from 'requirejs';
import test, { send } from './test.cjs';

//const test = require('./test.cjs');
import { jsx as _jsx } from "react/jsx-runtime";
var arg = process.argv.slice(2);
switch (arg[0]) {
  case '-l':
    var resource = '/products';
    break;
  case '-a':
    var resource = '/accounts';
    break;
  default:
    console.log('und');
}
;
const Options1 = () => {
  const handleSelect = item => {
    // `item` = { label: 'First', value: 'first'
    test.send(item.value);
  };
  const items = [{
    label: 'List Accounts',
    value: '/accounts'
  }, {
    label: 'Cancel Orders',
    value: '/orders/batch_cancel'
  }, {
    label: 'List Orders',
    value: '/orders/historical/batch'
  }, {
    label: 'List Fills',
    value: '/orders/historical/fills'
  }, {
    label: 'Get Best Bid/Ask',
    value: '/best_bid_ask'
  }, {
    label: 'Get Product Book',
    value: '/product_book'
  }, {
    label: 'List Products',
    value: '/products'
  }, {
    label: 'Get Tran-sactions Summary',
    value: '/transaction_summary'
  }];
  return _jsx(SelectInput, {
    items: items,
    onSelect: handleSelect
  });
};
render(_jsx(Options1, {}));
//export default select = item.value
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlbmRlciIsIlNlbGVjdElucHV0IiwicmVxdWlyZSIsInRlc3QiLCJzZW5kIiwianN4IiwiX2pzeCIsImFyZyIsInByb2Nlc3MiLCJhcmd2Iiwic2xpY2UiLCJyZXNvdXJjZSIsImNvbnNvbGUiLCJsb2ciLCJPcHRpb25zMSIsImhhbmRsZVNlbGVjdCIsIml0ZW0iLCJ2YWx1ZSIsIml0ZW1zIiwibGFiZWwiLCJvblNlbGVjdCJdLCJzb3VyY2VzIjpbImNsaS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtyZW5kZXJ9IGZyb20gJ2luayc7XG5pbXBvcnQgU2VsZWN0SW5wdXQgZnJvbSAnaW5rLXNlbGVjdC1pbnB1dCc7XG5pbXBvcnQgcmVxdWlyZSBmcm9tICdyZXF1aXJlanMnXG5pbXBvcnQgdGVzdCwgeyBzZW5kIH0gZnJvbSAnLi90ZXN0LmNqcydcblxuLy9jb25zdCB0ZXN0ID0gcmVxdWlyZSgnLi90ZXN0LmNqcycpO1xudmFyIGFyZyA9IHByb2Nlc3MuYXJndi5zbGljZSgyKTtcblxuc3dpdGNoIChhcmdbMF0pIHtcbiAgICBjYXNlICctbCc6XG4gICAgICAgIHZhciByZXNvdXJjZSA9ICcvcHJvZHVjdHMnXG5cdGJyZWFrO1xuICAgIGNhc2UgJy1hJzpcblx0dmFyIHJlc291cmNlID0gJy9hY2NvdW50cydcblx0YnJlYWs7XG4gICAgZGVmYXVsdDogY29uc29sZS5sb2coXG4gICAgICAgICd1bmQnKTtcbn07XG5cbmNvbnN0IE9wdGlvbnMxID0gKCkgPT4ge1xuXHRjb25zdCBoYW5kbGVTZWxlY3QgPSBpdGVtID0+IHtcblx0XHQvLyBgaXRlbWAgPSB7IGxhYmVsOiAnRmlyc3QnLCB2YWx1ZTogJ2ZpcnN0J1xuXHRcdHRlc3Quc2VuZChpdGVtLnZhbHVlKTtcblx0fTtcblxuXHRjb25zdCBpdGVtcyA9IFtcblx0XHR7XG5cdFx0bGFiZWw6ICdMaXN0IEFjY291bnRzJyxcblx0XHR2YWx1ZTogJy9hY2NvdW50cydcblx0XHR9LFxuXHRcdHtcblx0XHRsYWJlbDogJ0NhbmNlbCBPcmRlcnMnLFxuXHRcdHZhbHVlOiAnL29yZGVycy9iYXRjaF9jYW5jZWwnXG5cdFx0fSxcblx0XHR7XG5cdFx0bGFiZWw6ICdMaXN0IE9yZGVycycsXG5cdFx0dmFsdWU6ICcvb3JkZXJzL2hpc3RvcmljYWwvYmF0Y2gnXG5cdFx0fSxcblx0XHR7XG5cdFx0bGFiZWw6ICdMaXN0IEZpbGxzJyxcblx0XHR2YWx1ZTogJy9vcmRlcnMvaGlzdG9yaWNhbC9maWxscydcblx0XHR9LFxuXHRcdHtcblx0XHRsYWJlbDogJ0dldCBCZXN0IEJpZC9Bc2snLFxuXHRcdHZhbHVlOiAnL2Jlc3RfYmlkX2Fzaydcblx0XHR9LFxuXHRcdHtcblx0XHRsYWJlbDogJ0dldCBQcm9kdWN0IEJvb2snLFxuXHRcdHZhbHVlOiAnL3Byb2R1Y3RfYm9vaydcblx0XHR9LFxuXHRcdHtcblx0XHRsYWJlbDogJ0xpc3QgUHJvZHVjdHMnLFxuXHRcdHZhbHVlOiAnL3Byb2R1Y3RzJ1xuXHRcdH0sXG5cdFx0e1xuXHRcdGxhYmVsOiAnR2V0IFRyYW4tc2FjdGlvbnMgU3VtbWFyeScsXG5cdFx0dmFsdWU6ICcvdHJhbnNhY3Rpb25fc3VtbWFyeSdcblx0XHR9XG5cdF07XG5cblx0cmV0dXJuIDxTZWxlY3RJbnB1dCBpdGVtcz17aXRlbXN9IG9uU2VsZWN0PXtoYW5kbGVTZWxlY3R9IC8+O1xufTtcblxucmVuZGVyKDxPcHRpb25zMSAvPik7XG4vL2V4cG9ydCBkZWZhdWx0IHNlbGVjdCA9IGl0ZW0udmFsdWVcblxuIl0sIm1hcHBpbmdzIjoiQUFBQSxPQUFPQSxLQUFLLE1BQU0sT0FBTztBQUN6QixTQUFRQyxNQUFNLFFBQU8sS0FBSztBQUMxQixPQUFPQyxXQUFXLE1BQU0sa0JBQWtCO0FBQzFDLE9BQU9DLE9BQU8sTUFBTSxXQUFXO0FBQy9CLE9BQU9DLElBQUksSUFBSUMsSUFBSSxRQUFRLFlBQVk7O0FBRXZDO0FBQUEsU0FBQUMsR0FBQSxJQUFBQyxJQUFBO0FBQ0EsSUFBSUMsR0FBRyxHQUFHQyxPQUFPLENBQUNDLElBQUksQ0FBQ0MsS0FBSyxDQUFDLENBQUMsQ0FBQztBQUUvQixRQUFRSCxHQUFHLENBQUMsQ0FBQyxDQUFDO0VBQ1YsS0FBSyxJQUFJO0lBQ0wsSUFBSUksUUFBUSxHQUFHLFdBQVc7SUFDakM7RUFDRyxLQUFLLElBQUk7SUFDWixJQUFJQSxRQUFRLEdBQUcsV0FBVztJQUMxQjtFQUNHO0lBQVNDLE9BQU8sQ0FBQ0MsR0FBRyxDQUNoQixLQUFLLENBQUM7QUFDZDtBQUFDO0FBRUQsTUFBTUMsUUFBUSxHQUFHQSxDQUFBLEtBQU07RUFDdEIsTUFBTUMsWUFBWSxHQUFHQyxJQUFJLElBQUk7SUFDNUI7SUFDQWIsSUFBSSxDQUFDQyxJQUFJLENBQUNZLElBQUksQ0FBQ0MsS0FBSyxDQUFDO0VBQ3RCLENBQUM7RUFFRCxNQUFNQyxLQUFLLEdBQUcsQ0FDYjtJQUNBQyxLQUFLLEVBQUUsZUFBZTtJQUN0QkYsS0FBSyxFQUFFO0VBQ1AsQ0FBQyxFQUNEO0lBQ0FFLEtBQUssRUFBRSxlQUFlO0lBQ3RCRixLQUFLLEVBQUU7RUFDUCxDQUFDLEVBQ0Q7SUFDQUUsS0FBSyxFQUFFLGFBQWE7SUFDcEJGLEtBQUssRUFBRTtFQUNQLENBQUMsRUFDRDtJQUNBRSxLQUFLLEVBQUUsWUFBWTtJQUNuQkYsS0FBSyxFQUFFO0VBQ1AsQ0FBQyxFQUNEO0lBQ0FFLEtBQUssRUFBRSxrQkFBa0I7SUFDekJGLEtBQUssRUFBRTtFQUNQLENBQUMsRUFDRDtJQUNBRSxLQUFLLEVBQUUsa0JBQWtCO0lBQ3pCRixLQUFLLEVBQUU7RUFDUCxDQUFDLEVBQ0Q7SUFDQUUsS0FBSyxFQUFFLGVBQWU7SUFDdEJGLEtBQUssRUFBRTtFQUNQLENBQUMsRUFDRDtJQUNBRSxLQUFLLEVBQUUsMkJBQTJCO0lBQ2xDRixLQUFLLEVBQUU7RUFDUCxDQUFDLENBQ0Q7RUFFRCxPQUFPWCxJQUFBLENBQUNMLFdBQVc7SUFBQ2lCLEtBQUssRUFBRUEsS0FBTTtJQUFDRSxRQUFRLEVBQUVMO0VBQWEsQ0FBRSxDQUFDO0FBQzdELENBQUM7QUFFRGYsTUFBTSxDQUFDTSxJQUFBLENBQUNRLFFBQVEsSUFBRSxDQUFDLENBQUM7QUFDcEIifQ==